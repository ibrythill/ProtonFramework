/**
 * protonThemes Custom Fields JavaScript
 *
 * All JavaScript logic for fields in the post meta box.
 * @since 2.2.3
 *
 */

/**
 * @type {Object} JavaScript namespace for our application.
 */


/**
 * Primary Modal Application Class
 */



(function ($) {
/**
 * setup_wordcounters()
 *
 * @since 2.2.3
 */

	$(document).ready(function () {

		$( ".proton_input_extended_trigger" ).click( function ( e ) {
			e.preventDefault();
				var extended = {};
				var content = wp.template( $(this).attr('data-template' ));
				extended.content = content();
				var _field = $(this).next().attr('name');
				var _values = $('[name="'+_field+'"]').val();
				extended.theme = $(this).parents('.protonthemes-opts').find('li.ui-state-active').attr('data-theme');

				extended.title = $(this).parents('.proton-opt-box').find('.proton-opt-title').text();
				extended.desc = $(this).parents('.proton-opt-box').find('.proton-opt-desc').html();

				extended.afterContent = function(element){
					var propertyName;
						//get values
						if(_values){
							var values = JSON.parse(_values), propertyName;

							//apply values
							for (propertyName in values) {
							    //check if value is an array
							    if(Array.isArray(values[propertyName])){
									var field = element.ui.content.find('.proton-opt-box[data-field-name="'+propertyName+'"]');
									var fieldtype = field.attr('data-field-type');
									// if its an array, call field function to parse that array
									if(typeof protonFieldValue[fieldtype] !== "undefined"){
										protonFieldValue[fieldtype](field, values[propertyName]);
									}
							    }else{
							    	//not an array, find field and apply value
							    	element.ui.content.find('[name="'+propertyName+'"]').val(values[propertyName]);
							    }
							}
						}
						//call init functions
						element.ui.content.find('.proton-opt-box').each(function(){
							var fieldtype = jQuery(this).attr('data-field-type');

							if(typeof protonFieldMethods[fieldtype] !== "undefined"){
								protonFieldMethods[fieldtype]._init(jQuery(this));
							}

						});
				}

				extended.onSave = function(element){
					jQuery('[name="'+_field+'"]').val(element.$( 'form' ).serializeJSON());
					console.log(element.$( 'article form' ).serializeJSON())
				}

				protonAdmin.open_modal(extended);

		} );

	});

})(jQuery);