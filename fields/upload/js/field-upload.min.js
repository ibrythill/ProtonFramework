/**
 * protonThemes Custom Fields JavaScript
 *
 * All JavaScript logic for fields in the post meta box.
 * @since 2.2.3
 *
 */


(function ($) {

protonFieldMethods.upload = {
	 	_init: function(element){
			var gvalues = element.find('.proton-upload-values').val();
			var gcontainer = element.find('.proton-container-upload');
			var dataoutput = gcontainer.attr('data-output');
		    var string = gcontainer.attr('data-placeholder');
		    var viewfile = gcontainer.attr('data-viewfile');
			var image = /(^.*\.jpg|jpeg|png|gif|ico*)/gi;
			if('' !== gvalues){
				//var ids = gvalues.split(',');
				gcontainer.html('<li class="proton-field-upload-image"><i class="livicon shadowed" data-s="32" data-n="spinner-seven" data-loop="true" data-c="#fff" data-hc="#fff" style="width: 32px; height: 32px;"></i></li>');
				if('id' === dataoutput){
					//gcontainer.html('');
					var data = {
						'action': 'proton_ajax_attachment_url',
						'security': proton_var.proton_nonce,
						'pimid' : gvalues,
						'pimsize' : 'thumbnail'
					};

					// since 2.8 ajaxurl is always defined in the admin header and points to admin-ajax.php
					$.post(ajaxurl, data, function(response) {
						if (response.match(image)) {
							var preview_html = '<li class="proton-field-upload-image" id="pim_'+gvalues+'"><img src="' + response + '" alt="" /></li>';
						}else{
							var preview_html = '<li class="proton-upload-file"><a href="'+response+'" target="_blank" rel="external"><h4>'+viewfile+'</h4></a></li>';
						}
						gcontainer.html(preview_html);

					});
				}else{
					gcontainer.html('');
					if (gvalues.match(image)) {

						var data = {
								'action': 'proton_ajax_attachment_url',
								'security': proton_var.proton_nonce,
								'pimid' : gvalues,
								'pimsize' : 'thumbnail'
							};

							// since 2.8 ajaxurl is always defined in the admin header and points to admin-ajax.php
							$.post(ajaxurl, data, function(response) {
								var preview_html = '<li class="proton-field-upload-image" id="pim_'+gvalues+'"><img src="' + response + '" alt="" /></li>';
								gcontainer.append(preview_html);

							});

					}else{
						var preview_html = '<li class="proton-upload-file"><a href="'+gvalues+'" target="_blank" rel="external"><h4>'+viewfile+'</h4></a></li>';
					}
					gcontainer.html(preview_html);
				}

			}
		},
		_destroy: function(element){

		}
 	};

var protonFieldUpload = {};
protonFieldUpload.init = function( selector ) {

        $( document ).on( "click", '.proton-upload-attachments', function(event) {
                            var current_gallery = $( this ).closest( 'fieldset' );
                            var string = current_gallery.find( ".proton-container-upload" ).attr('data-placeholder');
                            var viewfile = current_gallery.find( ".proton-container-upload" ).attr('data-viewfile');
                            var image = /(^.*\.jpg|jpeg|png|gif*)/gi;
					        var document = /(^.*\.pdf|doc|docx|ppt|pptx|svg|odt*)/gi;
					        var audio = /(^.*\.mp3|m4a|ogg|wav*)/gi;
					        var video = /(^.*\.mp4|m4v|mov|wmv|avi|mpg|ogv|3gp|3g2*)/gi;
					        var dataoutput = current_gallery.find( ".proton-container-upload" ).attr('data-output');

                            if ( $(event.currentTarget).hasClass('proton-clearimages') ) {
                                //remove value from input

                                var rmVal = current_gallery.find( '.proton-upload-values' ).val( '' );

                                //remove preview images
                                current_gallery.find( ".proton-container-upload" ).html( '<li class="proton-upload-placeholder proton-upload-attachments"><h4>'+string+'</h4></li>' );

                                return;

                            }

                            // Make sure the media gallery API exists
                            if ( typeof wp === 'undefined' || !wp.media || !wp.media.gallery ) {
                                return;
                            }
                            event.preventDefault();

                            // Activate the media editor
                            // var $$ = $( this );

                            var val = current_gallery.find( '.proton-upload-values' ).val();
                            var final;

                            if ( !val ) {
                                final = '[gallery ids="0"]';
                            } else {
                                final = '[gallery ids="' + val + '"]';
                            }

                            var frame = wp.media({
						        frame: 'select',
						        multiple: false  // Set this to true to allow multiple files to be selected
						    })
						    frame.on('open',function() {
							  var selection = frame.state().get('selection');
							  var ids = val.split(',');
							    ids.forEach(function(id) {
								  var attachment = wp.media.attachment(id);
								  attachment.fetch();
								  selection.add( attachment ? [ attachment ] : [] );
								});
							})

						    frame.on('close',function() {
			                      // get selections and save to hidden input plus other AJAX stuff etc.
			                      //clear screenshot div so we can append new selected images
                                current_gallery.find( ".proton-container-upload" ).html( "" );

								var element, preview_html = "", preview_img;
								var selection = frame.state().get('selection');

								if('id' === dataoutput){
										var ids = selection.models.map(
	                                        function( e ) {
	                                            element = e.toJSON();
	                                            console.log(element);
	                                            if(element.id === '' ){return false;}
	                                            if (element.filename.match(image)) {

	                                            if(typeof element.sizes !== 'undefined' && typeof element.sizes.thumbnail !== 'undefined'){
			                                            preview_img = element.sizes.thumbnail.url
	                                            }else{
	                                            	preview_img = element.url;
	                                            }

	                                            preview_html = "<li class='proton-field-upload-image'><img src='" + preview_img + "' alt='' /><input data-field='id' type='hidden' name='upload_item[id][]' value='"+element.id+"'/><input data-field='img' type='hidden' name='upload_item[img][]' value='"+element.url+"'/><input data-field='name' type='hidden' name='upload_item[name][]' value='"+element.name+"'/><input data-field='title' type='hidden' name='upload_item[title][]' value='"+element.title+"'/></li>";
	                                            }else{
		                                            preview_html = "<li class='proton-upload-file'><a href='"+element.url+"' target='_blank' rel='external'><h4>"+viewfile+"</h4></a><input data-field='id' type='hidden' name='upload_item[id][]' value='"+element.id+"'/><input data-field='img' type='hidden' name='upload_item[img][]' value='"+element.url+"'/><input data-field='name' type='hidden' name='upload_item[name][]' value='"+element.name+"'/><input data-field='title' type='hidden' name='upload_item[title][]' value='"+element.title+"'/></li>";
	                                            }
	                                            current_gallery.find( ".proton-container-upload" ).append( preview_html );

	                                            return e.id;
	                                        }
	                                    );
										current_gallery.find( '.proton-upload-values' ).val( ids.join( ',' ) );
                                    }else{
	                                    var element = frame.state().get('selection').first().toJSON();
	                                    var ids = element.url;
	                                    if(typeof element.sizes !== 'undefined'){
	                                            preview_img = element.sizes.thumbnail.url
                                            }else{
                                            	preview_img = element.url;
                                            }
	                                    if (preview_img.match(image)) {
                                            preview_html = "<li class='proton-field-upload-image'><img src='" + preview_img + "' alt='' /><input data-field='id' type='hidden' name='upload_item[id][]' value='"+element.id+"'/><input data-field='img' type='hidden' name='upload_item[img][]' value='"+element.url+"'/><input data-field='name' type='hidden' name='upload_item[name][]' value='"+element.name+"'/><input data-field='title' type='hidden' name='upload_item[title][]' value='"+element.title+"'/></li>";
                                            }else{
	                                            preview_html = "<li class='proton-upload-file'><a href='"+element.url+"' target='_blank' rel='external'><h4>"+viewfile+"</h4></a><input data-field='id' type='hidden' name='upload_item[id][]' value='"+element.id+"'/><input data-field='img' type='hidden' name='upload_item[img][]' value='"+element.url+"'/><input data-field='name' type='hidden' name='upload_item[name][]' value='"+element.name+"'/><input data-field='title' type='hidden' name='upload_item[title][]' value='"+element.title+"'/></li>";
                                            }
                                        current_gallery.find( ".proton-container-upload" ).append( preview_html );
	                                    current_gallery.find( '.proton-upload-values' ).val( ids );
                                    }


								if(ids === ''){
	                                current_gallery.find( ".proton-container-upload" ).html( '<li class="proton-upload-placeholder proton-upload-attachments"><h4>'+string+'</h4></li>' );
                                }
			                   })
						    .open();

                            return false;
                        } );



    };


/**
 * Execute the above methods in the protonthemesCustomFields object.
 *
 * @since 2.2.3
 */
	$(document).ready(function () {

		protonFieldUpload.init();

	});

})(jQuery);