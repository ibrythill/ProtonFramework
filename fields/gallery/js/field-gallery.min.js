/**
 * protonThemes Custom Fields JavaScript
 *
 * All JavaScript logic for fields in the post meta box.
 * @since 2.2.3
 *
 */
(function ($) {

String.prototype.splice = function( idx, rem, s ) {
    return (this.slice(0,idx) + s + this.slice(idx + Math.abs(rem)));
};

function UrlExists(url)
{
    var http = new XMLHttpRequest();
    http.open('HEAD', url, false);
    http.send();
    return http.status!=404;
}
protonFieldMethods.gallery = {
	 	_init: function(element){
			var gvalues = element.find('.proton-gallery-values').val();
			if('' !== gvalues){
				var ids = gvalues.split(',');
				var gcontainer = element.find('.proton-container-gallery');
				gcontainer.html('');
				ids.forEach(function(id) {
					gcontainer.append('<li class="proton-field-gallery-image" id="pim_'+id+'"><i class="livicon shadowed" data-s="32" data-n="spinner-seven" data-loop="true" data-c="#fff" data-hc="#fff" style="width: 32px; height: 32px;"></i></li>');
					var data = {
						'action': 'proton_ajax_attachment_url',
						'security': proton_var.proton_nonce,
						'pimid' : id,
						'pimsize' : 'thumbnail'
					};

					// since 2.8 ajaxurl is always defined in the admin header and points to admin-ajax.php
					$.post(ajaxurl, data, function(response) {

						var preview_html = "<img src='" + response + "' alt='' /><input data-field='id' type='hidden' name='gallery_item[id][]' value='"+id+"'/>";
						gcontainer.find('#pim_'+id).html( preview_html );

					});

				});
				if(element.find( ".gallery_sort" ).length){
					element.find( ".gallery_sort" ).sortable({
					  update: function( event, ui ) {

					  		var sortel = $(this);
					  		var ids = [];
						  //$( '#' + formfield).val('');
						  sortel.children().each(function(i, el) {
						  	var idk = $(el).find('input[name="gallery_item[id][]"]').val();
						  	ids.push(idk);
						  });
						  element.find( '.proton-gallery-values' ).val(ids.join( ',' ));
					  },
					  placeholder: "ui-state-highlight"
					  //revert: true
					});
				}
			}
		},
		_destroy: function(element){

		}
 	};

var protonFieldGallery = {};
protonFieldGallery.init = function( selector ) {

        if ( !selector ) {
            selector = $( document ).find( '.proton-field-gallery' );
        }
		if($( ".gallery_sort" ).length){
			$( ".gallery_sort" ).sortable({
			  update: function( event, ui ) {

			  		var sortel = $(this);
			  		var ids = [];
				  //$( '#' + formfield).val('');
				  sortel.children().each(function(i, el) {
				  	var idk = $(el).find('input[name="gallery_item[id][]"]').val();
				  	ids.push(idk);
				  });
				  sortel.parent().find( '.proton-gallery-values' ).val(ids.join( ',' ));
			  },
			  placeholder: "ui-state-highlight",
			  revert: true
			});
		}

        $( document ).on( "click", '.proton-gallery-attachments', function(event) {
                            var current_gallery = $( this ).closest( 'fieldset' );
                            var string = current_gallery.find( ".proton-container-gallery" ).attr('data-placeholder');

                            if ( $(event.currentTarget).hasClass('proton-clearimages') ) {
                                //remove value from input

                                var rmVal = current_gallery.find( '.proton-gallery-values' ).val( '' );

                                //remove preview images
                                current_gallery.find( ".proton-container-gallery" ).html( '<li class="proton-gallery-placeholder proton-gallery-attachments"><h4>'+string+'</h4></li>' );

                                return;

                            }

                            // Make sure the media gallery API exists
                            if ( typeof wp === 'undefined' || !wp.media || !wp.media.gallery ) {
                                return;
                            }
                            event.preventDefault();

                            // Activate the media editor
                            // var $$ = $( this );

                            var val = current_gallery.find( '.proton-gallery-values' ).val();
                            var final;

                            if ( !val ) {
                                final = '[gallery ids="0"]';
                            } else {
                                final = '[gallery ids="' + val + '"]';
                            }

                            var frame = wp.media({
						        frame: 'select',
						        multiple: true  // Set this to true to allow multiple files to be selected
						    })
						    frame.on('open',function() {
							  var selection = frame.state().get('selection');
							  var ids = val.split(',');
							    ids.forEach(function(id) {
								  var attachment = wp.media.attachment(id);
								  attachment.fetch();
								  selection.add( attachment ? [ attachment ] : [] );
								});
							})

						    frame.on('close',function() {
			                      // get selections and save to hidden input plus other AJAX stuff etc.
			                      //clear screenshot div so we can append new selected images
                                current_gallery.find( ".proton-container-gallery" ).html( "" );

								var element, preview_html = "", preview_img;
								var selection = frame.state().get('selection');


								var ids = selection.models.map(
                                        function( e ) {
                                            element = e.toJSON();
                                            if(element.id === '' ){return false;}
                                            preview_img = typeof element.sizes.thumbnail !== 'undefined' ? element.sizes.thumbnail.url : element.url;
                                            preview_html = "<li class='proton-field-gallery-image'><img src='" + preview_img + "' alt='' /><input data-field='id' type='hidden' name='gallery_item[id][]' value='"+element.id+"'/><input data-field='img' type='hidden' name='gallery_item[img][]' value='"+preview_img+"'/><input data-field='name' type='hidden' name='gallery_item[name][]' value='"+element.name+"'/><input data-field='title' type='hidden' name='gallery_item[title][]' value='"+element.title+"'/></li>";
                                            current_gallery.find( ".proton-container-gallery" ).append( preview_html );

                                            return e.id;
                                        }
                                    );

								current_gallery.find( '.proton-gallery-values' ).val( ids.join( ',' ) );
								if(ids.join( ',' ) === 'false'){
	                                current_gallery.find( ".proton-container-gallery" ).html( '<li class="proton-gallery-placeholder proton-gallery-attachments"><h4>'+string+'</h4></li>' );
                                }
			                   })
						    .open();

                            return false;
                        });



    };



/**
 * Execute the above methods in the protonthemesCustomFields object.
 *
 * @since 2.2.3
 */
	$(document).ready(function () {

		protonFieldGallery.init();

	});

})(jQuery);